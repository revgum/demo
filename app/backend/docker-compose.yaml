version: '3.7'
services:
  ############################
  # backend app + Dapr sidecar
  ############################
  backend:
    build:
      context: ./app/backend
      dockerfile: ./Dockerfile.dev
    ports:
      - "3001:3001"
    command: >
      sh -c "npm run knex -- migrate:latest && npm run dev"
    environment:
      SEED_DATA: true # Load seed data on start
      CHOKIDAR_USEPOLLING: true # Supports "tsx watch" for live reloading
      DAPR_HOST: 127.0.0.1
      DAPR_PORT: 3500
      SERVER_HOST: 127.0.0.1
      SERVER_PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      # DB_DEBUG: 1
      # DB_SSL: postgres # Production
    volumes:
      - ./app/backend/src:/app/src
      - backend-node_modules:/app/node_modules # Persist docker containers modules so that localhost are not used
    depends_on:
      - redis
      - placement
      - zipkin
      - postgres
    networks:
      - dapr-net
  backend-dapr:
    image: "docker.io/daprio/daprd:edge"
    command: [
      "./daprd",
      "--app-id", "backend",
      "--app-port", "3001",
      "--config", "/configuration/config.yaml",
      "--dapr-http-port", "3500",
      "--enable-api-logging",
      "--enable-profiling",
      "--log-as-json", "true",
      "--placement-host-address", "placement:50006",
      "--profile-port", "7777",
      "--resources-path", "/components"
      ]
    volumes:
      # Volume mounts are relative from the root directory where dapr-net-compose is run from
      - "./dapr/components/:/components"
      - "./dapr/config/:/configuration"
    depends_on:
      - backend
    labels:
      - "dapr.io/enabled=true"  # Enable Dapr for this service
      - "dapr.io/config=configstore"
    network_mode: "service:backend"

volumes:
  backend-node_modules: # Persist the node_modules directory built and used by the linux container

networks:
  dapr-net: # here we set the network name
    driver: bridge
